 ///////////////////////////////////////
       version="version templategp.lib 0.1 Sept_2022 ";
       category="Algebraic geometry";
       info="
       LIBRARY: templategp.lib  procedure to calculate the blow up of affine space at a point

       OVERVIEW:
           This is a library for computing the blow up of an affine variety at a given center.
           It uses a ring independent chart data structure that consists of a ring and two 
           ideals, both of which are in the ring. The first ideal defines an algebraic variety,
           while the second ideal defines by its complement an open set that meets the variety. 

       PROCEDURES:
       BlowUp(token)               computes the blow up of an affine variety at a given center
       
";

LIB "ring.lib";
LIB "elim.lib";

proc BlowUp(token T)
"USAGE: BlowUp(T); T is a token
ASSUME: T contains a chart X and a center C 
RETURN: find the blow up of affine variety defined by X.vari at center C
EXAMPLE: example BlowUp, shows an example"
{
newstruct ("chart", "ring in, ideal vari, ideal D");
def R = T.data[1];
ideal F = T.data[2];
ideal C = T.data[4];
ring S = 0, (y(1..size(fetch(R,C)))), dp;
list L1 = ringlist(R);
list L2 = ringlist(S);
L1[2] = L1[2]+L2[2];
def T = ring(L1);
chart r;
r.in = R;
setring r.in;
ideal X1 = fetch(R,F);
r.vari = X1;
r.D = 1;
chart s;
s.in = S;
setring s.in;
s.vari = 0;
s.D = 1;
chart t;
t.in = T;
setring t.in;
matrix m[2][nvars(S)];
ideal J = fetch(R,C);
for (int i=1; i<=nvars(S); i=i+1)
{
  
  m[1,i] = m[1,i] + var(nvars(R)+i);
  m[2,i] = m[2,i] + J[i];
}
t.vari = minor(m,2);
ideal X2 = fetch(R,F); 
t.vari = t.vari + X2; 
t.D = 1;
ideal K;
for (int i=1; i<=nvars(S); i=i+1)
{
 K = K + ideal(maxideal(1)[i+nvars(R)]);
}
t.vari = sat(t.vari,K)[1];
token output;
list tokens;
token A;
for (int i=1; i<=nvars(S); i=i+1) 
{
  chart Y(i);
  Y(i).in = t.in;
  Y(i).D = y(i)-1;
  Y(i).vari = subst (t.vari, y(i),1);
  Y(i).vari = Y(i).vari + Y(i).D;  
  Y(i).vari = std(Y(i).vari); 
  output.fieldnames = list ("chart");
  output.data = list(Y(i).in, Y(i).vari, Y(i).D);
  tokens[i] = output;
  A.fieldnames[i] = "blowup" + string(i);
}
A.data = tokens;

return(A);
}

